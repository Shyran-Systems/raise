image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/raise-base:latest

stages:
  - build
  - test

variables:
  AWS_DEFAULT_REGION: eu-west-1
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/packages/testing/.cache/Cypress
  BASTION: 'bastion'
cache:
  key: '${CI_COMMIT_REF_SLUG}'
  paths:
    - $CI_PROJECT_DIR/packages/testing/.cache/Cypress

build-front-review:
  stage: build
  variables:
    REACT_APP_COOKIE_DOMAIN: .${CI_COMMIT_REF_SLUG}.review.${DOMAIN}
    REACT_APP_HOST_URL: https://${CI_COMMIT_REF_SLUG}.review.${DOMAIN}
    REACT_APP_HOST_URL_AUTH: https://${CI_COMMIT_REF_SLUG}.api.${DOMAIN}
    REACT_APP_HOST_URL_CORE: https://${CI_COMMIT_REF_SLUG}.api.${DOMAIN}
    REACT_APP_HOST_URL_FILE: https://${CI_COMMIT_REF_SLUG}.api.${DOMAIN}
  script:
    - |
      #!/bin/sh
      if [ -n "${REVIEW_SLUG}" ]; then
        REACT_APP_COOKIE_DOMAIN=.${REVIEW_SLUG}.review.${DOMAIN}
        REACT_APP_HOST_URL=https://${REVIEW_SLUG}.review.${DOMAIN}
        REACT_APP_HOST_URL_AUTH=https://${REVIEW_SLUG}.api.${DOMAIN}
        REACT_APP_HOST_URL_CORE=https://${REVIEW_SLUG}.api.${DOMAIN}
        REACT_APP_HOST_URL_FILE=https://${REVIEW_SLUG}.api.${DOMAIN}
      fi
      echo $REACT_APP_HOST_URL
      yarn --pure-lockfile
      yarn run client:build:integration
      mv  packages/client/build  packages/client/build_review
  artifacts:
    when: always
    paths:
      - packages/client/build_review
  resource_group: review

lint-front-review:
  stage: build
  script:
    - 'yarn --pure-lockfile'
    - yarn run client:build:integration
    - 'yarn run lint'
  artifacts:
    when: always
    paths:
      - packages/client/build_review

build-components:
  stage: build
  script:
    - yarn
    - yarn run components:build:umd
  only:
    - master
  artifacts:
    when: always
    paths:
      - packages/components/dist

build-onboarding:
  stage: build
  script:
    - yarn install --frozen-lockfile --stream  --scope '{@raisehq/onboarding,@raisehq/libs}'
    - cd packages/onboarding  & yarn build
    - yarn rollup
  artifacts:
    when: always
    paths:
      - packages/libs/build
  resource_group: production

build-front-integration:
  stage: build
  script:
    - 'echo $REACT_APP_HOST_URL'
    - 'yarn --pure-lockfile'
    - 'yarn run client:build:integration'
    - 'mv  packages/client/build  packages/client/build_int'
  artifacts:
    when: always
    paths:
      - packages/client/build_int
  resource_group: integration

build-front-production:
  stage: build
  script:
    - 'echo $REACT_APP_HOST_URL'
    - 'yarn --pure-lockfile'
    - 'yarn run client:build:production'
  artifacts:
    when: always
    paths:
      - packages/client/build
  resource_group: production

lint-front:
  stage: build
  script:
    - 'yarn --pure-lockfile'
    - 'yarn run client:build:production'
    - 'yarn run lint'
  artifacts:
    when: always
    paths:
      - packages/client/build

deploy-components:
  image: python:3.7-alpine
  stage: deploy
  variables:
    LIB_BUCKET_NAME: lib.raise.it
  before_script:
    - 'pip install awscli'
  script:
    - |
      #!/bin/sh
      mv packages/components/dist components
      ls -la components
      aws s3 cp components/raisecomponents.umd.development.js s3://${LIB_BUCKET_NAME}/components/ --metadata-directive REPLACE --cache-control max-age=86400000,public
      aws s3 cp components/raisecomponents.umd.development.js.map s3://${LIB_BUCKET_NAME}/components/ --metadata-directive REPLACE --cache-control max-age=86400000,public
      aws s3 cp components/raisecomponents.umd.production.min.js s3://${LIB_BUCKET_NAME}/components/ --metadata-directive REPLACE --cache-control max-age=86400000,public
      aws s3 cp components/raisecomponents.umd.production.min.js.map s3://${LIB_BUCKET_NAME}/components/ --metadata-directive REPLACE --cache-control max-age=86400000,public
  only:
    - master

deploy-onboarding:
  image: python:3.7-alpine
  stage: deploy
  variables:
    LIB_BUCKET_NAME: lib.raise.it
  before_script:
    - 'pip install awscli'
  script:
    - |
      #!/bin/sh
      mv packages/libs/build onboarding
      aws s3 sync --delete onboarding s3://${LIB_BUCKET_NAME}/onboarding/ --metadata-directive REPLACE --cache-control max-age=86400000
  only:
    - master

deploy-int:
  image: python:3.7-alpine
  stage: deploy
  before_script:
    - 'pip install awscli'
  script:
    - |
      #!/bin/sh
      mv packages/client/build_int build_int
      aws s3 sync --delete build_int s3://${BUCKET_NAME_INT}/ --metadata-directive REPLACE --cache-control max-age=86400000,public
      aws s3 cp s3://${BUCKET_NAME_INT}/ s3://${BUCKET_NAME_INT}/ --recursive --exclude "*" --include "*.html" --metadata-directive REPLACE --cache-control max-age=0,must-revalidate,public
      for dist in $(aws cloudfront list-distributions --output=text --query 'DistributionList.Items[*].[Id, DefaultCacheBehavior.TargetOriginId'] | grep "$BUCKET_NAME_INT" | cut -f1); do
        echo $dist
        aws cloudfront create-invalidation --distribution-id $dist --paths "/*";
      done
  only:
    - master

deploy-canary:
  image: python:3.7-alpine
  stage: deploy
  before_script:
    - 'pip install awscli'
  script:
    - |
      #!/bin/sh
      mv packages/client/build canary
      aws s3 sync --delete canary s3://${BUCKET_NAME_PROD}/canary --metadata-directive REPLACE --cache-control max-age=86400000
      aws s3 cp s3://${BUCKET_NAME_PROD}/canary/ s3://${BUCKET_NAME_PROD}/canary/ --recursive --exclude "*" --include "*.html" --metadata-directive REPLACE --cache-control max-age=0,must-revalidate,public
      for dist in $(aws cloudfront list-distributions --output=text --query 'DistributionList.Items[*].[Id, DefaultCacheBehavior.TargetOriginId'] | grep "$BUCKET_NAME_PROD" | cut -f1); do
        echo $dist
        aws cloudfront create-invalidation --distribution-id $dist --paths "/*";
      done
  only:
    - master
  resource_group: production

cypress-e2e-review:
  image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/cypress:latest
  stage: test
  variables:
    CYPRESS_url: 'http://${CI_COMMIT_REF_SLUG}.review.${DOMAIN}'
    CYPRESS_baseUrl: 'http://${CI_COMMIT_REF_SLUG}.review.${DOMAIN}'
    CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/packages/testing/.cache/Cypress
    CYPRESS_api: ${CI_COMMIT_REF_SLUG}.api.${DOMAIN}
    CYPRESS_isCanary: 'false'
  script:
    - yarn --pure-lockfile
    - cd packages/testing
    - yarn run cypress cache path
    - yarn run cypress cache list
    - yarn run cypress verify
    - yarn run ci:run
  artifacts:
    expire_in: '1 week'
    when: always
    paths:
      - packages/testing/ganache_db
      - packages/testing/cypress/screenshots
      - packages/testing/cypress/videos
      - packages/testing/cypress/snapshots
  cache:
    key: ganache-global-cache
    paths:
      - packages/testing/ganache_db
  resource_group: review

cypress-e2e-production:
  image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/cypress:latest
  stage: test
  variables:
    CYPRESS_url: 'https://app.raise.it'
    CYPRESS_baseUrl: 'https://app.raise.it'
    CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/packages/testing/.cache/Cypress
    CYPRESS_api: api.raise.it
    CYPRESS_isCanary: 'false'
  script:
    - yarn --pure-lockfile
    - cd packages/testing
    - yarn run cypress cache path
    - yarn run cypress cache list
    - yarn run cypress verify
    - yarn run ci:run
  artifacts:
    expire_in: '1 week'
    when: always
    paths:
      - packages/testing/cypress/screenshots
      - packages/testing/ganache_db
      - packages/testing/cypress/videos
      - packages/testing/cypress/snapshots
  cache:
    key: ganache-global-cache
    paths:
      - packages/testing/ganache_db
  resource_group: production
