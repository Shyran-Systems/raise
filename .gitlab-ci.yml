image: node:11
stages:
  - build
  - deploy
  - test
  - review
  - cleanup

variables:
  AWS_DEFAULT_REGION: eu-west-1
  npm_config_cache: '$CI_PROJECT_DIR/packages/testing/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/packages/testing/.cache/Cypress'

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - packages/testing/contracts
    - '$CI_PROJECT_DIR/packages/testing/.cache/Cypress'

build-front-review:
  stage: build
  variables:
    REACT_APP_COOKIE_DOMAIN: .${CI_BUILD_REF_NAME}.review.$DOMAIN
    REACT_APP_HOST_URL: ${CI_BUILD_REF_NAME}.review.$DOMAIN
  script:
    - npx lerna bootstrap
    - npx lerna run compile:components
    - npx lerna bootstrap
    - npx lerna run compile:onboarding
    - npx lerna bootstrap
    - npm run client:build:integration
  only:
    - merge_requests
  except:
    - master
  artifacts:
    when: always
    paths:
      - packages/client/build

build-front-production:
  stage: build
  script:
    - npx lerna bootstrap
    - npx lerna run compile:components
    - npx lerna bootstrap
    - npx lerna run compile:onboarding
    - npx lerna bootstrap
    - npm run client:build:production
  only:
    - master
  artifacts:
    when: always
    paths:
      - packages/client/build

build-front-integration:
  stage: build
  script:
    - npx lerna bootstrap
    - npx lerna run compile:components
    - npx lerna bootstrap
    - npx lerna run compile:onboarding
    - npx lerna bootstrap
    - npm run client:build:integration
    - mv  packages/client/build  packages/client/build_int
  only:
    - master
  artifacts:
    when: always
    paths:
      - packages/client/build_int

deploy-prod:
  image: 'python:latest'
  stage: deploy
  before_script:
    - pip install awscli
  script:
    - mv packages/client/build build
    - mv packages/client/build_int build_int
    - aws s3 rm s3://${BUCKET_NAME_INT}/ --recursive
    - aws s3 rm s3://${BUCKET_NAME_PROD}/ --recursive
    - aws s3 sync build_int s3://${BUCKET_NAME_INT}/
    - aws s3 sync build s3://${BUCKET_NAME_PROD}/
  only:
    - master

# cypress-e2e:
#   image: cypress/base:10
#   stage: test
#   variables:
#     CYPRESS_url: http://${CI_BUILD_REF_NAME}.review.$DOMAIN
#     CYPRESS_baseUrl: http://${CI_BUILD_REF_NAME}.review.$DOMAIN
#     CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/packages/testing/.cache/Cypress"
#   before_script:
#     - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat && apt-get install git-all -y && apt-get install libudev-dev libusb-1.0-0-dev -y && apt-get clean && rm -rf /var/lib/apt/lists/*
#   script:
#     - cd packages/testing
#     - npm i
#     - $(npm bin)/cypress cache path
#     - $(npm bin)/cypress cache list
#     - $(npm bin)/cypress verify
#     - npm run ci:run
#   artifacts:
#     expire_in: 1 week
#     when: always
#     paths:
#       - packages/testing/cypress/screenshots
#       - packages/testing/cypress/videos
#       - packages/testing/cypress/snapshots
#   only:
#     - merge_requests

# cypress-e2e-integration:
#   image: cypress/base:10
#   stage: test
#   variables:
#     CYPRESS_url: https://int.herodev.es
#     CYPRESS_baseUrl: https://int.herodev.es
#     CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/packages/testing/.cache/Cypress"
#   before_script:
#     - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y netcat && apt-get install git-all -y && apt-get install libudev-dev libusb-1.0-0-dev -y && apt-get clean && rm -rf /var/lib/apt/lists/*
#   script:
#     - cd packages/testing
#     - npm i
#     - $(npm bin)/cypress cache path
#     - $(npm bin)/cypress cache list
#     - $(npm bin)/cypress verify
#     - npm run ci:run
#   artifacts:
#     expire_in: 1 week
#     when: always
#     paths:
#       - packages/testing/cypress/screenshots
#       - packages/testing/cypress/videos
#       - packages/testing/cypress/snapshots
#   only:
#     - master

review:
  image: 'python:latest'
  stage: review
  before_script:
    - pip install awscli
  script:
    - mv packages/client/build $(echo ${CI_BUILD_REF_NAME} | tr A-Z a-z)
    - aws s3 rm s3://${BUCKET_NAME}/$(echo ${CI_BUILD_REF_NAME} | tr A-Z a-z)/ --recursive
    - aws s3 sync $(echo ${CI_BUILD_REF_NAME} | tr A-Z a-z) s3://${BUCKET_NAME}/$(echo ${CI_BUILD_REF_NAME} | tr A-Z a-z)
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: http://${CI_BUILD_REF_NAME}.review.$DOMAIN
    on_stop: stop-review
  only:
    - merge_requests
  except:
    - master

stop-review:
  image: 'python:latest'
  stage: cleanup
  before_script:
    - pip install awscli
  script:
    - aws s3 rm s3://${BUCKET_NAME}/$(echo ${CI_BUILD_REF_NAME} | tr A-Z a-z) --recursive
  when: manual
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop
  only:
    - merge_requests
  except:
    - master
